---
<% if @system.config['logo'] -%>
title: |
    ![](<%= @system.config['logo']['path'] -%>){width=<%= @system.config['logo']['width'] %>}

    <%= @system.config['name'] %>
<% else %>
title: "<%= @system.config['name'] -%>"
<% end %>

subtitle: |
    System Security Plan

    <%=build_date.strftime('%Y-%b-%d')%>

<% unless version == OCTool::DEFAULT_SSP_VERSION -%>
    Version <%=version%>
<% end -%>

author:
<% @system.config['maintainers'].each do |maintainer| -%>
    - <%= maintainer -%>
<% end %>

absract: |
    <%= @system.config['metadata']['abstract'] rescue 'None' %>

description: |
    <%= @system.config['metadata']['description'] rescue 'None' %>

fontsize: 11pt
mainfont: NotoSans
monofont: NotoSansMono-ExtraCondensed
mainfontoptions:
    - Numbers=Lowercase
    - Numbers=Proportional
    - UprightFont=*
    - ItalicFont=*-Italic
    - BoldFont=*-Bold
    - BoldItalicFont=*-BoldItalic

lof: true
lot: true
colorlinks: true
linkcolor: black  # internal links (e.g., lof and lot)
urlcolor: blue

documentclass: report
classoption:
    - onecolumn
    - oneside
    - portrait

pagestyle: headings
papersize: letter
geometry:
    - top=2cm
    - left=3cm
    - right=2cm
    - bottom=2cm

header-includes:
    - |
        ```{=latex}
        % https://ctan.org/pkg/metalogo?lang=en
        \usepackage{metalogo}
        ```
    - |
        ```{=latex}
        % https://github.com/jgm/pandoc/wiki/Pandoc-Tricks#left-aligning-tables-in-latex
        \usepackage[margins=raggedright]{floatrow}
        ```
    - |
        ```{=latex}
        % https://github.com/jgm/pandoc/wiki/Pandoc-Tricks#definition-list-terms-on-their-own-line-in-latex
        % "Clone" the original \item command
        \let\originalitem\item

        % Redefine the \item command using the "clone"
        \makeatletter
        \renewcommand{\item}[1][\@nil]{%
            \def\tmp{#1}%
            \ifx\tmp\@nnil\originalitem\else\originalitem[#1]\hfill\par\fi}
        \makeatother
        ```
    - |
        ```{=latex}
        % The are at least two ways to configure how LaTeX floats figures.
        %
        % 1. One approach is described in section 17.2 of
        %    http://tug.ctan.org/tex-archive/info/epslatex/english/epslatex.pdf
        %    However, the approach described there requires to teach people
        %    how to write LaTeX cross-references in markdown.
        %
        % 2. Force figures, listings, etc., to float "[H]ere".
        %    This is a LaTeX anti-pattern because it causes large gaps of whitespace on some pages.
        %    This approach avoids having to teach people to create LaTeX cross-references.
        %    https://tex.stackexchange.com/a/101726
        %
        % Use option 2.
        \usepackage{float}
        \floatplacement{figure}{H}
        ```
    - |
        ```{=latex}
        % https://tex.stackexchange.com/a/32537
        \usepackage{lastpage}

        % https://ctan.org/pkg/fancyhdr?lang=en
        \usepackage{fancyhdr}

        \pagestyle{fancy}
        <% unless version == OCTool::DEFAULT_SSP_VERSION %>
        \fancyfoot[L]{Version: <%=version-%>}
        <% end %>
        \fancyfoot[C]{<%=build_date.strftime('%Y-%b-%d')-%>}
        \fancyfoot[R]{\thepage\ of\ \pageref{LastPage}}
        \renewcommand{\footrulewidth}{0.4pt} % thickness
        \renewcommand{\headrulewidth}{0.4pt} % thickness
        \fancypagestyle{plain}{\fancyhead{}\renewcommand{\headrule}{}}
        ```
---

# Introduction

## About this document

A System Security Plan (SSP) is a document to describe security controls in use
on an information system and their implementation. An SSP provides:

- Narrative of security control implementation
- Description of components and services
- System data flows and authorization boundaries

The SSP is also a tool to guide the assessment of the effectiveness
of controls within the system.

## Standards

This SSP draws from these standards:

<% @system.standards.each do |s| -%>
- <%=s['name']-%> (<%=s['standard_key']-%>)
<% end %>

The full copy of each standard is included in the appendix.


## Certifications

A certification is a logical grouping of controls that are of interest to
a given subject. A particular certification does not necessarily target all
controls from a standard, nor does a particular certification need to draw
from a single standard.

This SSP addresses these certifications:

<% @system.certifications.each do |c| -%>
- <%=c['name']%>

<% c['requires'].each do |r| -%>
    - <%=r['standard_key']-%> control <%=r['control_key']%>
<% end -%>

<% end %>


# <%= @system.config['name'] %>

## Overview

<%= @system.config['overview'] %>


## Components

<% @system.components.each do |c| %>
### <%= c['name'] %>

<%= c['description'] %>

<% if c['attestations'].empty? %>
_The organization has not yet documented attestations for this component_.
<% else %>
The organization offers the following attestations for this component.
<% end %>

<% c['attestations'].compact.each do |a| %>
####  <%= a['summary'] %>

+----------+---------------+--------------------------------------------------------------+
| Status   | Date verified | Satisfies                                                    |
+==========+===============+==============================================================+
<%
s = a['satisfies'][0]
verbiage = sprintf('%-58s', [s['standard_key'], 'control', s['control_key']].join(' '))
-%>
| <%=sprintf('%-8s', a['status'])-%> | <%=sprintf('%-13s', a['date_verified'])-%> | - <%=verbiage-%> |
<%
a['satisfies'][1..].each do |s|
    verbiage = sprintf('%-58s', [s['standard_key'], 'control', s['control_key']].join(' '))
-%>
|          |               | - <%=verbiage-%> |
<%  end -%>
+----------+---------------+--------------------------------------------------------------+

<%= a['narrative'] %>

<% end %>
<% end %>


# Appendix: Standards

<% @system.standards.each do |s| %>
## <%=s['name'] %>

<% if s['families'] and !s['families'].empty? %>
### Families

<%=s['name']-%> categorizes controls into logical groups called families.

| Family abbreviation        | Family name          |
| -------------------------- | -------------------- |
<% s['families'].each do |family| -%>
| <%=family['family_key']-%> | <%=family['name']-%> |
<% end -%>

  : Control families for <%=s['name']%>

<% end %>

### Controls

<% s['controls'].each do |c| %>
#### Control <%= c['control_key'] -%>: <%= c['name'] %>

<%= c['description'] %>

<% end %>
<% end %>


# Colophon

This document was typeset in NotoSans with \LuaTeX\.
The main body font is 11-point, and
code snippets use NotoSansMono-ExtraCondensed.

The Noto family of fonts is freely available and developed by Google,
which describes Noto as:

> When text is rendered by a computer, sometimes characters are displayed as
> "tofu". They are little boxes to indicate your device doesn't have a
> font to display the text.
>
> Google has been developing a font family called Noto, which aims to support
> all languages with a harmonious look and feel. Noto is Google's answer to
> tofu. The name noto is to convey the idea that Google's goal is to see
> "no more tofu". Noto has multiple styles and weights, and is freely
> available to all.

Core tools used to produce this document:

- [Docker](https://www.docker.com/) provides a repeatable environment in
  which to run the tools.
- [OCTool](https://github.com/jumanjihouse/octool)
  provides a schema and wrapper to express compliance data as configuration.
- [Pandoc](https://pandoc.org/) converts extended markdown to PDF output.
- [Python](https://www.python.org/) is a core language for automation.
- [Ruby](https://www.ruby-lang.org/en/) is a core language for automation.
- [TeXLive](https://www.tug.org/texlive/) provides the \TeX\ family of tools.
